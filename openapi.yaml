# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /auth/menu/v1/CreateMenu:
        post:
            tags:
                - Menu
            description: CreateMenu 创建菜单
            operationId: Menu_CreateMenu
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.role.v1.CreateMenuRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.role.v1.MenuReply'
    /auth/menu/v1/DeleteMenu:
        get:
            tags:
                - Menu
            description: DeleteMenu 删除菜单
            operationId: Menu_DeleteMenu
            parameters:
                - name: ids
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.role.v1.MenuReply'
    /auth/menu/v1/GetMenu:
        get:
            tags:
                - Menu
            description: GetMenu 查询单挑菜单信息
            operationId: Menu_GetMenu
            parameters:
                - name: id
                  in: query
                  schema:
                    type: integer
                    format: uint64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.role.v1.GetMenuReply'
    /auth/menu/v1/ListMenu:
        get:
            tags:
                - Menu
            description: ListMenu 获取菜单列表
            operationId: Menu_ListMenu
            parameters:
                - name: id
                  in: query
                  schema:
                    type: integer
                    format: uint64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.role.v1.ListMenuReply'
    /auth/menu/v1/ListMenuTree:
        get:
            tags:
                - Menu
            description: ListMenuTree 获取树形列表
            operationId: Menu_ListMenuTree
            parameters:
                - name: id
                  in: query
                  schema:
                    type: integer
                    format: uint64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.role.v1.ListMenuReply'
    /auth/menu/v1/UpdateMenu:
        post:
            tags:
                - Menu
            description: UpdateMenu 编辑菜单
            operationId: Menu_UpdateMenu
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.role.v1.UpdateMenuRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.role.v1.MenuReply'
    /auth/role/v1/CheckAct:
        post:
            tags:
                - Role
            description: 检查角色权限
            operationId: Role_CheckAct
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.role.v1.CheckActRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.role.v1.CheckActReply'
    /auth/role/v1/CreateRole:
        post:
            tags:
                - Role
            description: 创建角色
            operationId: Role_CreateRole
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.role.v1.CreateRoleRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.role.v1.CreateRoleReply'
    /auth/role/v1/DeleteRole:
        get:
            tags:
                - Role
            description: 删除角色
            operationId: Role_DeleteRole
            parameters:
                - name: ids
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.role.v1.RoleReply'
    /auth/role/v1/GetRole:
        get:
            tags:
                - Role
            description: 获取角色
            operationId: Role_GetRole
            parameters:
                - name: id
                  in: query
                  schema:
                    type: integer
                    format: uint64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.role.v1.GetRoleReply'
    /auth/role/v1/ListRole:
        get:
            tags:
                - Role
            description: 获取角色列表
            operationId: Role_ListRole
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.role.v1.ListRoleReply'
    /auth/role/v1/UpdateRole:
        post:
            tags:
                - Role
            description: 编辑角色
            operationId: Role_UpdateRole
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.role.v1.UpdateRoleRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.role.v1.RoleReply'
    /common/captcha/v1/getCaptcha:
        get:
            tags:
                - Captcha
            description: 获取验证码
            operationId: Captcha_GetCaptcha
            parameters:
                - name: Email
                  in: query
                  description: 邮箱
                  schema:
                    type: string
                - name: LastIp
                  in: query
                  description: IP
                  schema:
                    type: string
                - name: AcceptLanguage
                  in: query
                  description: 客户端头部
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.captcha.v1.GetCaptchaReply'
    /common/captcha/v1/verifyCaptcha:
        get:
            tags:
                - Captcha
            description: 验证验证码
            operationId: Captcha_VerifyCaptcha
            parameters:
                - name: Email
                  in: query
                  description: 邮箱
                  schema:
                    type: string
                - name: CaptchaId
                  in: query
                  description: 验证码ID
                  schema:
                    type: string
                - name: Answer
                  in: query
                  description: 回答
                  schema:
                    type: string
                - name: LastIp
                  in: query
                  description: IP
                  schema:
                    type: string
                - name: AcceptLanguage
                  in: query
                  description: 客户端头部
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.captcha.v1.VerifyCaptchaReply'
    /common/pay/v1/CreatePay:
        post:
            tags:
                - Pay
            operationId: Pay_CreatePay
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.pay.v1.CreatePayRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.pay.v1.CreatePayReply'
    /common/qiniu/UploadFileBase:
        post:
            tags:
                - QiNiu
            operationId: QiNiu_UploadFileBase
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.upload.v1.UploadFileBaseRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.upload.v1.UploadFileBaseReply'
    /common/qiniu/v1/UpToken:
        get:
            tags:
                - QiNiu
            operationId: QiNiu_UpToken
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.upload.v1.UpTokenRequestReply'
    /common/query/v1/GetCountryIso:
        get:
            tags:
                - Query
            description: 获取国家IOS
            operationId: Query_GetCountryIso
            parameters:
                - name: ip
                  in: query
                  description: IP
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.captcha.v1.GetCountryIsoReply'
    /project/brand/v1/CreateBrand:
        post:
            tags:
                - Brand
            operationId: Brand_CreateBrand
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.project.v1.CreateBrandRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.project.v1.CreateBrandReply'
    /project/brand/v1/DeleteBrand/{id}:
        get:
            tags:
                - Brand
            operationId: Brand_DeleteBrand
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.project.v1.DeleteBrandReply'
    /project/brand/v1/GetBrand/{id}:
        get:
            tags:
                - Brand
            operationId: Brand_GetBrand
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.project.v1.GetBrandReply'
    /project/brand/v1/ListBrand:
        get:
            tags:
                - Brand
            operationId: Brand_ListBrand
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.project.v1.ListBrandReply'
    /project/brand/v1/UpdateBrand:
        post:
            tags:
                - Brand
            operationId: Brand_UpdateBrand
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.project.v1.UpdateBrandRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.project.v1.UpdateBrandReply'
    /user/user/v1/FindOrModifyPasswd:
        post:
            tags:
                - User
            description: 用户找回或修改密码
            operationId: User_UserFindOrModifyPasswd
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.v1.UserFindOrModifyPasswdRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.v1.UserFindOrModifyPasswdReply'
    /user/user/v1/RefreshToken:
        get:
            tags:
                - User
            description: 用户刷新Token
            operationId: User_RefreshToken
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.v1.RefreshTokenReply'
    /user/user/v1/UserModifyPasswd:
        post:
            tags:
                - User
            description: 用户修改密码
            operationId: User_UserModifyPasswd
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.v1.UserModifyPasswdRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.v1.UserReply'
    /user/user/v1/login:
        post:
            tags:
                - User
            description: 用户登录
            operationId: User_UserLogin
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.v1.UserLoginRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.v1.UserLoginReply'
    /user/user/v1/reg:
        post:
            tags:
                - User
            description: 用户注册
            operationId: User_CreateUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.v1.CreateUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.v1.CreateUserReply'
components:
    schemas:
        api.captcha.v1.GetCaptchaReply:
            type: object
            properties:
                captchaId:
                    type: string
                data:
                    type: string
            description: GetCaptchaReply 获取验证码返回
        api.captcha.v1.GetCountryIsoReply:
            type: object
            properties:
                ios:
                    type: string
            description: GetCountryIsoReply 返回国家IOS
        api.captcha.v1.VerifyCaptchaReply:
            type: object
            properties:
                Status:
                    type: boolean
                    description: 邮箱
            description: 验证验证码
        api.pay.v1.CreatePayReply:
            type: object
            properties:
                orderId:
                    type: string
                url:
                    type: string
        api.pay.v1.CreatePayRequest:
            type: object
            properties:
                orderPrefix:
                    type: string
                    description: 订单前缀
                email:
                    type: string
                    description: 用户标识
                country:
                    type: string
                    description: 用户所属国家
                amount:
                    type: number
                    description: 订单金额
                    format: double
                currency:
                    type: string
                    description: 货币
                returnUrl:
                    type: string
                    description: 返回Url
                pay:
                    $ref: '#/components/schemas/api.pay.v1.PayOption'
        api.pay.v1.PayOption:
            type: object
            properties:
                type:
                    type: string
                    description: 支付类型
                parameter:
                    type: string
                    description: 支付参数
                shop:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.pay.v1.Shop'
                    description: 商品参数
                description:
                    type: string
                    description: 简介
            description: 支付参数
        api.pay.v1.Shop:
            type: object
            properties:
                name:
                    type: string
                price:
                    type: string
                num:
                    type: string
                currency:
                    type: string
            description: 商品参数
        api.project.v1.CreateBrandReply:
            type: object
            properties: {}
        api.project.v1.CreateBrandRequest:
            type: object
            properties:
                projectBrandName:
                    type: string
                projectBrandFirstLetter:
                    type: string
                projectBrandSort:
                    type: integer
                    format: uint32
                projectBrandFactoryStatus:
                    type: integer
                    format: uint32
                projectBrandShowStatus:
                    type: integer
                    format: uint32
                projectBrandLogo:
                    type: string
                projectBrandBigPic:
                    type: string
                projectBrandBrandInfo:
                    type: string
            description: 创建品牌
        api.project.v1.DeleteBrandReply:
            type: object
            properties: {}
        api.project.v1.GetBrandReply:
            type: object
            properties: {}
        api.project.v1.ListBrandReply:
            type: object
            properties: {}
        api.project.v1.UpdateBrandReply:
            type: object
            properties: {}
        api.project.v1.UpdateBrandRequest:
            type: object
            properties: {}
        api.role.v1.CheckActReply:
            type: object
            properties:
                status:
                    type: boolean
            description: 检查角色权限回复
        api.role.v1.CheckActRequest:
            type: object
            properties:
                key:
                    type: string
                url:
                    type: string
                method:
                    type: string
            description: 检查角色权限
        api.role.v1.CreateMenuRequest:
            type: object
            properties:
                userId:
                    type: integer
                    format: uint64
                menuName:
                    type: string
                icon:
                    type: string
                path:
                    type: string
                ancestors:
                    type: string
                menuType:
                    type: string
                action:
                    type: string
                permission:
                    type: string
                parentId:
                    type: integer
                    format: uint64
                breadcrumb:
                    type: string
                component:
                    type: string
                sort:
                    type: integer
                    format: uint64
                visible:
                    type: integer
                    format: uint64
                isFrame:
                    type: integer
                    format: uint64
        api.role.v1.CreateRoleReply:
            type: object
            properties:
                status:
                    type: boolean
                    description: 添加状态
            description: 角色创建回复
        api.role.v1.CreateRoleRequest:
            type: object
            properties:
                roleName:
                    type: string
                    description: 角色名称
                roleStatus:
                    type: integer
                    description: 角色状态 1正常 2不正常
                    format: int32
                roleKey:
                    type: string
                    description: 角色主键
                roleSort:
                    type: integer
                    description: 角色排序
                    format: int64
                roleRemark:
                    type: string
                    description: 角色备注
                roleAdmin:
                    type: boolean
                    description: 是否是管理员
                menuIds:
                    type: array
                    items:
                        type: integer
                        format: uint64
                    description: 菜单ID
                deptIds:
                    type: array
                    items:
                        type: integer
                        format: int64
                    description: 部门ID
            description: 角色创建
        api.role.v1.GetMenuReply:
            type: object
            properties:
                menuId:
                    type: integer
                    format: uint64
                menuName:
                    type: string
                icon:
                    type: string
                path:
                    type: string
                ancestors:
                    type: string
                menuType:
                    type: string
                action:
                    type: string
                permission:
                    type: string
                parentId:
                    type: integer
                    format: uint64
                breadcrumb:
                    type: string
                component:
                    type: string
                sort:
                    type: integer
                    format: uint64
                visible:
                    type: integer
                    format: uint64
                isFrame:
                    type: integer
                    format: uint64
                children:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.role.v1.GetMenuReply'
        api.role.v1.GetRoleReply:
            type: object
            properties:
                roleId:
                    type: integer
                    format: uint64
                roleName:
                    type: string
                roleStatus:
                    type: integer
                    format: int32
                roleKey:
                    type: string
                roleSort:
                    type: integer
                    format: int64
                roleFlag:
                    type: string
                roleRemark:
                    type: string
                roleAdmin:
                    type: integer
                    format: int32
                roleDataScope:
                    type: string
                createdAt:
                    type: string
                updatedAt:
                    type: string
                deletedAt:
                    type: string
                roleEmpId:
                    type: integer
                    format: uint64
                roleMenu:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.role.v1.RoleMenu'
            description: 查询角色回复
        api.role.v1.ListMenuReply:
            type: object
            properties:
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.role.v1.GetMenuReply'
        api.role.v1.ListRoleReply:
            type: object
            properties:
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.role.v1.GetRoleReply'
            description: 角色列表回复
        api.role.v1.MenuReply:
            type: object
            properties:
                status:
                    type: boolean
        api.role.v1.RoleMenu:
            type: object
            properties:
                roleId:
                    type: integer
                    format: uint64
                menuId:
                    type: integer
                    format: uint64
            description: 角色菜单查询
        api.role.v1.RoleReply:
            type: object
            properties:
                status:
                    type: boolean
        api.role.v1.UpdateMenuRequest:
            type: object
            properties:
                userId:
                    type: integer
                    format: uint64
                menuId:
                    type: integer
                    format: uint64
                menuName:
                    type: string
                icon:
                    type: string
                path:
                    type: string
                ancestors:
                    type: string
                menuType:
                    type: string
                action:
                    type: string
                permission:
                    type: string
                parentId:
                    type: integer
                    format: uint64
                breadcrumb:
                    type: string
                component:
                    type: string
                sort:
                    type: integer
                    format: uint64
                visible:
                    type: integer
                    format: uint64
                isFrame:
                    type: integer
                    format: uint64
        api.role.v1.UpdateRoleRequest:
            type: object
            properties:
                roleId:
                    type: integer
                    description: 角色ID
                    format: uint64
                roleName:
                    type: string
                    description: 角色名称
                roleStatus:
                    type: integer
                    description: 角色状态 1正常 2不正常
                    format: int32
                roleKey:
                    type: string
                    description: 角色主键
                roleSort:
                    type: integer
                    description: 角色排序
                    format: int64
                roleRemark:
                    type: string
                    description: 角色备注
                roleAdmin:
                    type: boolean
                    description: 是否是管理员
                menuIds:
                    type: array
                    items:
                        type: integer
                        format: uint64
                    description: 菜单ID
                deptIds:
                    type: array
                    items:
                        type: integer
                        format: int64
                    description: 部门ID
            description: 编辑角色
        api.upload.v1.UpTokenRequestReply:
            type: object
            properties:
                token:
                    type: string
        api.upload.v1.UploadFileBaseReply:
            type: object
            properties:
                file:
                    type: string
        api.upload.v1.UploadFileBaseRequest:
            type: object
            properties:
                file:
                    type: string
                path:
                    type: string
        api.user.v1.CreateUserReply:
            type: object
            properties:
                Email:
                    type: string
                    description: 邮箱
                Country:
                    type: string
                    description: 所属国家
                Phone:
                    type: string
                    description: 电话
                Token:
                    type: string
                    description: token
                ExpiresAt:
                    type: string
                    description: 过期时间
            description: CreateUserReply 创建用户返回
        api.user.v1.CreateUserRequest:
            type: object
            properties:
                Email:
                    type: string
                    description: 邮箱
                Passwd:
                    type: string
                    description: 密码
                Phone:
                    type: string
                    description: 电话
                LastIp:
                    type: string
                    description: IP
                AcceptLanguage:
                    type: string
                    description: 客户端头部
            description: CreateUserRequest 创建用户
        api.user.v1.RefreshTokenReply:
            type: object
            properties:
                Token:
                    type: string
                    description: token
                ExpiresAt:
                    type: string
                    description: 过期时间
        api.user.v1.UserFindOrModifyPasswdReply:
            type: object
            properties:
                Status:
                    type: boolean
                Url:
                    type: string
                urlStr:
                    type: string
            description: UserFindOrModifyPasswdReply 用户找回或修改密码返回
        api.user.v1.UserFindOrModifyPasswdRequest:
            type: object
            properties:
                Email:
                    type: string
                LastIp:
                    type: string
                    description: IP
                AcceptLanguage:
                    type: string
                    description: 客户端头部
                CaptchaId:
                    type: string
                    description: 验证码ID
                Answer:
                    type: string
                    description: 回答
            description: UserFindOrModifyPasswdRequest 用户找回或修改密码
        api.user.v1.UserLoginReply:
            type: object
            properties:
                Email:
                    type: string
                    description: 邮箱
                Country:
                    type: string
                    description: 所属国家
                Phone:
                    type: string
                    description: 电话
                Token:
                    type: string
                    description: Token
                ExpiresAt:
                    type: string
                    description: 过期时间
            description: UserLoginReply 用户登录回复
        api.user.v1.UserLoginRequest:
            type: object
            properties:
                Email:
                    type: string
                    description: 邮箱
                Passwd:
                    type: string
                    description: 密码
                LastIp:
                    type: string
                    description: IP
                AcceptLanguage:
                    type: string
                    description: 客户端头部
            description: UserLoginRequest 用户登录
        api.user.v1.UserModifyPasswdRequest:
            type: object
            properties:
                Email:
                    type: string
                    description: 邮箱
                Code:
                    type: string
                    description: 找回密码返回KEY
                LastIp:
                    type: string
                    description: IP
                Passwd:
                    type: string
                    description: 密码
                AcceptLanguage:
                    type: string
                    description: 客户端头部
            description: UserModifyPasswdRequest 修改密码
        api.user.v1.UserReply:
            type: object
            properties:
                Status:
                    type: boolean
            description: UserModifyPasswdReply 修改密码返回
tags:
    - name: Brand
    - name: Captcha
    - name: Menu
      description: Menu 菜单接口
    - name: Pay
    - name: QiNiu
    - name: Query
    - name: Role
      description: 角色管理
    - name: User
